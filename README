Command line calling format for all executables and an example formatted set of commands:
- ./doChordID.sh testFileList.txt testout/ (on Linux)
- ./doChordID-win.sh testFileList.txt testout/ (on Windows)
- ./doChordID-osx.sh testFileList.txt testout/ (on Mac)
- make sure there is a new line at the end of the "testFileList.txt"
- The inputs are specified in testFileList.txt
- The analyzed results can be found in the testout/ folder

Number of threads/cores used or whether this should be specified on the command line:
- N/A

Expected memory footprint:
- Here's a reference of the memory usage of MATLAB
>> memory
Maximum possible array:       32334 MB (3.390e+10 bytes) *
Memory available for all arrays:       32334 MB (3.390e+10 bytes) *
Memory used by MATLAB:        1225 MB (1.285e+09 bytes)
Physical Memory (RAM):       32692 MB (3.428e+10 bytes)

And the task manager shows a memory usage of about average 700 MB and maximum 1 GB during execution.

Expected runtime:
- For a 3 minutes song, executed with the MATLAB shell, the running time of the program is about 25 seconds on a 64bit windows machine with 32G RAM and E5-2650 @ 2.3GHz processor (the main bottleneck is multiple calls of "lsqnonneg" to solve many nnls problems)

Any required environments (and versions), e.g. Python, Java, bash, MATLAB.
- MATLAB R2015a or later
- Cygwin if run on Windows
- The system has only been tested under Windows with MATLAB R2015a and Cygwin. (That is, only ''doChordID-win.sh'' script has been tested)
- Run the system on Windows if possible


System Settings -

For details about the settings of the systems, refer to:
- ''paramInitX.m'' (X = system version number)
- ''bassTrebleCorrectY.m'' (Y = btVersion Specified in the paramInitX.m file)

system 20 - baseline approach without chord correction
system 10 - heuristic based chord correction
system 15 - chord confusion matrix based chord correction (revconf-J-10)
system 23 - chord confusion matrix based chord correction (revconf-B-10)
system 19 - feedforward neural network chord correction (nn2(data-J-12-key.mat,120,544,1000,1)-71.6)
system 21 - feedforward neural network with language model (nn2(data-J-12-key.mat,120,544,1000,1)-71.6 + LM-J)
system 22 - feedforward neural network with language model (nn2(data-J-12-key.mat,120,544,1000,1)-71.6 + LM-B)
system 24 - feedforward neural network chord correction (nn2(data-B-12-key.mat,120,544,1000,1)-62.84)
system 25 - feedforward neural network with language model (nn2(data-B-12-key.mat,120,544,1000,1)-62.84 + LM-B)
system 26 - neural network RBM + DNN based chord correction. rbm2_bias(120,544,277,0.02,1000,10000,data-JB-12,0)-nn2_bias(120,544,277,1000,1,init_model,data-JB-12)
system 27 - neural network RBM + DNN based chord correction. rbm2_bias(120,544,277,0.02,1000,10000,data-J-12,0)-nn2_bias(120,544,277,1000,1,init_model,data-J-12)
system 28 rbm2_bias(120,544,277,0.02,1000,10000,data-J-12,0)-nn2_bias(120,544,277,1000,1,init_model,data-J-12) + LM-J
system 29 rbm2_bias(120,544,277,0.02,1000,10000,data-J-12,0)-nn2_bias(120,544,277,1000,1,init_model,data-J-12) + LM-B